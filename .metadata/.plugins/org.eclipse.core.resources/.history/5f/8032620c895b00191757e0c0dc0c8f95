package io.github.hardlitchi.rest.security.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import io.github.hardlitchi.rest.security.entity.Account;
import io.github.hardlitchi.rest.security.repository.AccountRepository;

/**
 * アカウント情報取扱いロジック.
 * @author hardlitchi
 * @version 1.0
 */
@Service
public class AccountService {

	/** アカウントRepository. */
	@Autowired
	private AccountRepository accountRepository;

	/** パスワードエンコーダ. */
	@Autowired
	private PasswordEncoder passwordEncoder;

	/**
	 * ユーザIDとパスワードでアカウント情報を取得する.
	 * @param username ユーザID
	 * @param password パスワード
	 * @return アカウント情報
	 */
	public Account get(String username, String password) {
		return accountRepository.findByUsernameAndPassword(username, passwordEncoder.encode(password)).orElse(null);
	}

	/**
	 * アカウント情報を登録する.
	 * @param username ユーザID
	 * @param password パスワード
	 * @param admin 管理者権限か否か
	 * @return
	 */
	public Account saveAndFlush(String username, String password, Boolean admin) {
		Account account = Account.of(username, passwordEncoder.encode(password));
		account.setAdmin(admin);
		return accountRepository.saveAndFlush(account);
	}
}
